# -*- coding: utf-8 -*-
"""KartikLRNew.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12K8GJcCpryBOYIkeOEmlDSQ8f6VDwQwc
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.impute import SimpleImputer
from sklearn.pipeline import Pipeline
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score, mean_squared_error
import joblib  # For saving the model

# Mount Google Drive
from google.colab import drive
drive.mount('/content/drive')

# Load dataset
file_path = '/content/drive/MyDrive/Dataset123.csv'
data = pd.read_csv(file_path)

# Define input features and target
features = ['cf1', 'RH']
if 'TempC' in data.columns:
    features.append('TempC')

X = data[features]
y = data['FM']

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

# Define pipeline
model = Pipeline(steps=[
    ('imputer', SimpleImputer(strategy='median')),
    ('regressor', LinearRegression())
])

# Train the model
model.fit(X_train, y_train)

# Save model for website use
model_path = '/content/drive/MyDrive/LR_model_for_website.joblib'
joblib.dump(model, model_path)
print(f"Model saved to: {model_path}")

# Predict
y_pred = model.predict(X_test)

# Evaluate
r2 = r2_score(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)

print(f"RÂ² Score: {r2}")
print(f"Mean Squared Error: {mse}")
print(f"Root Mean Squared Error: {rmse}")

# Extract cf1 values for histogram
original_cf1_test = X_test['cf1']

# Combine into a DataFrame
results_df = pd.DataFrame({
    'Original FM': y_test.values,
    'Predicted FM': y_pred,
    'Original cf1': original_cf1_test.values
})

# Plot histogram
plt.figure(figsize=(14, 8), dpi=600)
plt.hist(results_df['Original FM'], bins=30, alpha=0.5, label='Original FM', color='#00008B')
plt.hist(results_df['Predicted FM'], bins=30, alpha=0.5, label='Calibrated FM', color='#8B0000')
plt.hist(results_df['Original cf1'], bins=30, alpha=0.5, label='Original PA', color='#006400')
plt.xlabel('PM$_{2.5}$', fontsize=24)
plt.ylabel('Frequency', fontsize=24)
plt.title('Histogram of Original FM, Calibrated FM, and Original PA Values for LR', fontsize=24)
plt.legend(fontsize=20)
plt.xticks(fontsize=20)
plt.yticks(fontsize=20)
plt.tight_layout()

# Save plot
plot_path = '/content/drive/MyDrive/Histogram_LRNew.png'
plt.savefig(plot_path, format='png', dpi=600)
print(f"Histogram saved to: {plot_path}")

plt.show()